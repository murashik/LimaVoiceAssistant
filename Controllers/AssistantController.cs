using LimaVoiceAssistant.Models;
using LimaVoiceAssistant.Services;
using Microsoft.AspNetCore.Mvc;
using NLog;

namespace LimaVoiceAssistant.Controllers;

/// <summary>
/// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º
/// </summary>
[ApiController]
[Route("api/[controller]")]
[Produces("application/json")]
public class AssistantController : ControllerBase
{
    private readonly IOpenAIService _openAIService;
    private readonly NLog.ILogger _logger;

    public AssistantController(IOpenAIService openAIService)
    {
        _openAIService = openAIService;
        _logger = LogManager.GetCurrentClassLogger();
    }

    /// <summary>
    /// –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    /// </summary>
    /// <param name="request">–ó–∞–ø—Ä–æ—Å —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</param>
    /// <returns>–û—Ç–≤–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞</returns>
    [HttpPost("query")]
    public async Task<ActionResult<AssistantResponse>> ProcessQuery([FromBody] AssistantRequest request)
    {
        try
        {
            _logger.Info($"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: '{request.Message}' (—Å–µ—Å—Å–∏—è: {request.SessionId ?? "–Ω–æ–≤–∞—è"})");

            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            if (string.IsNullOrWhiteSpace(request.Message))
            {
                return BadRequest(new AssistantResponse
                {
                    Success = false,
                    ErrorMessage = "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º",
                    Response = "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å."
                });
            }

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º sessionId –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
            var sessionId = request.SessionId ?? Guid.NewGuid().ToString();

            // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ OpenAI Service
            var response = await _openAIService.ProcessUserMessageAsync(
                request.Message, 
                sessionId, 
                HttpContext.RequestAborted);

            _logger.Info($"–û—Ç–≤–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω: —Ñ—É–Ω–∫—Ü–∏—è='{response.FunctionName}', —É—Å–ø–µ—Ö={response.Success}");
            
            return Ok(response);
        }
        catch (Exception ex)
        {
            _logger.Error(ex, $"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: '{request.Message}'");
            
            return Ok(new AssistantResponse
            {
                Success = false,
                ErrorMessage = ex.Message,
                Response = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            });
        }
    }

    /// <summary>
    /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º
    /// </summary>
    /// <returns>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</returns>
    [HttpGet("help")]
    public ActionResult<string> GetHelp()
    {
        return Ok(@"ü§ñ –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ Lima –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!

üìù **–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:**

üè™ **–°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏ –≤ –∞–ø—Ç–µ–∫—É:**
   ""–°–æ–∑–¥–∞–π –±—Ä–æ–Ω—å –≤ –∞–ø—Ç–µ–∫—É –ù—É—Ä–∞—Ñ—à–æ–Ω –Ω–∞ –ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª ‚Äî 5 —É–ø–∞–∫–æ–≤–æ–∫""

üè• **–§–∏–∫—Å–∞—Ü–∏—è –≤–∏–∑–∏—Ç–∞ –≤ –õ–ü–£:**
   ""–ó–∞—à—ë–ª –≤ –∫–ª–∏–Ω–∏–∫—É –ú–µ–¥–∏–ì—Ä–∞–Ω–¥, –≥–æ–≤–æ—Ä–∏–ª —Å –≤—Ä–∞—á–æ–º –ò–≤–∞–Ω–æ–≤—ã–º –æ –ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª–µ""

üìã **–ò—Å—Ç–æ—Ä–∏—è –≤–∏–∑–∏—Ç–æ–≤:**
   ""–ü–æ–∫–∞–∂–∏ –º–æ–∏ –≤–∏–∑–∏—Ç—ã"", ""–ò—Å—Ç–æ—Ä–∏—è –≤–∏–∑–∏—Ç–æ–≤ –≤ –∞–ø—Ç–µ–∫–∏""

üîç **–ü–æ–∏—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π:**
   ""–ù–∞–π–¥–∏ –∞–ø—Ç–µ–∫—É –ù—É—Ä–∞—Ñ—à–æ–Ω"", ""–ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–ª–∏–Ω–∏–∫–∞ –ú–µ–¥–∏–ì—Ä–∞–Ω–¥""

üìÖ **–ü–ª–∞–Ω –≤–∏–∑–∏—Ç–æ–≤:**
   ""–ö–∞–∫–∏–µ –≤–∏–∑–∏—Ç—ã –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É?"", ""–ü–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü""

üíä **–û—Å—Ç–∞—Ç–∫–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤:**
   ""–°–∫–æ–ª—å–∫–æ –ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª–∞?"", ""–ï—Å—Ç—å –ª–∏ –ò–±—É–ø—Ä–æ—Ñ–µ–Ω?""

‚ùå **–û—Ç–º–µ–Ω–∞:** ""–û—Ç–º–µ–Ω–∞"", ""–û—á–∏—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç""

–ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ, –∏ —è –ø–æ–º–æ–≥—É! ‚ú®");
    }
}